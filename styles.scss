@tailwind base;
@tailwind components;
@tailwind utilities;
@import url("https://fonts.googleapis.com/css2?family=Raleway:wght@100;200;300;400;500;600;700;800;900&display=swap");
// *************************** demo
$gutter: 30px;
$container-gutter-mobile: $gutter;
$container-gutter-tablet: 50px;
$container-gutter-desktop: 70px;
// page dimensions
$page-width: 1290px;
$page-limit: $page-width + ($container-gutter-desktop * 2);
// Predefined breakpoints
$min-mobile: 419px;
$min-tablet: 719px;
$min-desktop: 1079px;
$primary: #2128bd;
$primary-inverted: #ded742;
@function strip-unit($number) {
  @if type-of($number) == "number" and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }
  @return $number;
}
@mixin responsive-font(
  $min-size: $font-size-min,
  $size: $font-size,
  $limit: $page-limit
) {
  $scale-font-enable: global-variable-exists(scale);
  $unitless-min: strip-unit($min-size);
  $unitless-size: strip-unit($size);
  $baseline: strip-unit($min-mobile);
  $font-multiplier: (
    ($unitless-size - $unitless-min) / (strip-unit($limit) - $baseline)
  );
  $font-baseline: ($unitless-min - $font-multiplier * $baseline);
  @if $unitless-min >= $unitless-size {
    @warn 'Responsive font: min-size equal or greater than size';
  }
  font-size: #{$unitless-min}px;
  @if $scale-font-enable == true {
    font-size: calc(#{$unitless-min}px * #{var(--scale-font)});
  }
  @media (min-width: $min-mobile) {
    font-size: #{$unitless-min}px;
    @if $scale-font-enable == true {
      font-size: calc(
        (#{$font-multiplier} * #{100vw} + (#{$font-baseline}px)) *
          #{var(--scale-font)}
      );
    } @else {
      font-size: calc((#{$font-multiplier} * #{100vw} + (#{$font-baseline}px)));
    }
  }
  @media (min-width: $limit) {
    font-size: #{$unitless-size}px;
    @if $scale-font-enable == true {
      font-size: calc(#{$unitless-size}px * #{var(--scale-font)});
    }
  }
}
// Alias for responsive-font mixin
@mixin rf($args...) {
  @include responsive-font($args...);
}
body {
  font-family: "Raleway", sans-serif;
  padding: 0;
  margin: 0;
  cursor: none;
}
* {
  box-sizing: border-box;
  -moz-user-select: none;
  -khtml-user-select: none;
  -webkit-user-select: none;
}
.svgfillblue {
  fill: $primary;
}
.svgfillwhite {
  fill: white;
}
.primary-class {
  color: $primary;
}
//Cursor
.cursor {
  position: fixed;
  background: $primary-inverted;
  width: 25px;
  height: 25px;
  margin: -10px 0 0 -10px;
  border-radius: 50%;
  will-change: transform;
  user-select: none;
  pointer-events: none;
  z-index: 10000;
  mix-blend-mode: difference;
}
// NAVBAR
.locale-switcher span {
  font-size: 17px;
  margin-right: 20px;
  font-weight: 500;
  letter-spacing: 1px;
  &:hover {
    font-weight: 900;
  }
}
.hamburger-locale-wrapper {
  display: flex;
  flex-direction: row;
  align-items: center;
}
.hamburger {
  z-index: 9999;
}
// HERO
.shapes {
  position: relative;
  height: 100vh;
  width: 100vw;
  background: $primary;
  overflow: hidden;
}
.shape {
  will-change: transform;
  position: absolute;
  border-radius: 50%;
  $shapes: (
    #005ffe: 650px,
    #ffe5e3: 440px,
    #ffcc57: 270px,
  );
  @each $color, $size in $shapes {
    &.shape-#{index($shapes, ($color $size))} {
      background: $color;
      width: $size;
      height: $size;
      margin: (-$size/2) 0 0 (-$size/2);
    }
  }
}
.hero-content {
  top: 0;
  left: 0;
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  width: 100vw;
  mix-blend-mode: screen;
}
.hero-title {
  @include rf(100, 200); // defined in imported pen;
  margin: 0;
  text-align: center;
  font-weight: 900;
}
.hero-title-content {
  position: absolute;
  bottom: 5%;
  right: 10%;
  max-width: 400px;
  line-height: 1.5em;
}
::selection {
  color: #fff;
  background: $primary;
}
